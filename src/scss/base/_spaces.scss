@mixin spaces($prefix, $attr) {
  @for $i from 1 through length($spaces) {
    $space: nth($spaces, $i);

    #{$prefix}-#{$i} {
      #{$attr}: rem($space);
    }
  }
}

@include spaces(".m", margin);
@include spaces(".mt", margin-top);
@include spaces(".mb", margin-bottom);
@include spaces(".ml", margin-left);
@include spaces(".mr", margin-right);

@include spaces(".p", padding);
@include spaces(".pt", padding-top);
@include spaces(".pb", padding-bottom);
@include spaces(".pl", padding-left);
@include spaces(".pr", padding-right);

@media #{$min-sm} {
  @include spaces(".m-sm", margin);
  @include spaces(".mt-sm", margin-top);
  @include spaces(".mb-sm", margin-bottom);
  @include spaces(".ml-sm", margin-left);
  @include spaces(".mr-sm", margin-right);

  @include spaces(".p-sm", padding);
  @include spaces(".pt-sm", padding-top);
  @include spaces(".pb-sm", padding-bottom);
  @include spaces(".pl-sm", padding-left);
  @include spaces(".pr-sm", padding-right);
}

@media #{$min-md} {
  @include spaces(".m-md", margin);
  @include spaces(".mt-md", margin-top);
  @include spaces(".mb-md", margin-bottom);
  @include spaces(".ml-md", margin-left);
  @include spaces(".mr-md", margin-right);

  @include spaces(".p-md", padding);
  @include spaces(".pt-md", padding-top);
  @include spaces(".pb-md", padding-bottom);
  @include spaces(".pl-md", padding-left);
  @include spaces(".pr-md", padding-right);
}

.no-margin {
  margin: 0 !important;
}

.no-padding {
  margin: 0 !important;
}

.space {
  float: left;
  width: 100%;
  clear: both;
  margin-bottom: rem(20px);
}
