/********** PARCE INT **********/
@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

/********** REM SIZE TRANSFORM **********/
@function rem($size) {
  @return parseInt($size) / parseInt($font-size) * 1rem;
}

/********** PUT VERSION IN URL **********/
@function v-url($url) {
  $v-url: url($url + "?v=" + $version);

  @return $v-url;
}

/********** STRING REPLACE **********/
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/********** URL ENCODE **********/
@function url-encode($string) {
  $map: (
    "%": "%25",
    "<": "%3C",
    ">": "%3E",
    " ": "%20",
    "!": "%21",
    "*": "%2A",
    "'": "%27",
    '"': "%22",
    "(": "%28",
    ")": "%29",
    ";": "%3B",
    ":": "%3A",
    "@": "%40",
    "&": "%26",
    "=": "%3D",
    "+": "%2B",
    "$": "%24",
    ",": "%2C",
    "/": "%2F",
    "?": "%3F",
    "#": "%23",
    "[": "%5B",
    "]": "%5D",
  );

  $new: $string;

  @each $search, $replace in $map {
    $new: str-replace($new, $search, $replace);
  }

  @return $new;
}

/********** GENERATE SVG URL **********/
@function svg-url($svg) {
  $encoded: "";
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($svg) / $slice);
  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);

    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, "<", "%3C");
    $chunk: str-replace($chunk, ">", "%3E");
    $chunk: str-replace($chunk, "&", "%26");
    $chunk: str-replace($chunk, "#", "%23");
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

/********** RETURNS SVG URL FOR BACKGROUND IMAGE AND CHANGE SVGS COLORS **********/
/********** Uses svgs from svg-assets.scss with 'color' or 'color-x' params **********/
@function use-svg($key, $new-fill...) {
  $length: length($new-fill);
  $result: map-get($svg, $key);

  @if $length == 1 {
    $result: str-replace($result, "color", $new-fill);
  } @else {
    @for $i from 1 through $length {
      $result: str-replace($result, "color-" + $i, nth($new-fill, $i));
    }
  }

  @return svg-url("#{$result}");
}

/********** SPACE **********/
@function space($num) {
  @return rem(nth($spaces, $num));
}
